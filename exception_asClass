##class B:
##    pass
##class C(B):
##    pass
##class D(C):
##    pass
##
##for c in [B, C, D]:
##    try:
##        raise c()
##    except D:
##        print "D"
##    except C:
##        print "C"
##    except B:
##        print "B"

##class B:
##    pass
##class C(B):
##    pass
##class D(C):
##    pass
##
##for c in [B, C, D]:
##    try:
##        raise c()
##    except B:
##        print "B"
##    except C:
##        print "C"
##    except D:
##        print "D"

##class Reverse:
##    """Iterator for looping over a sequence backwards."""
##    def __init__(self, data):
##        self.data = data
##        self.index = len(data)
##    def __iter__(self):
##        return self
##    def next(self):
##        if self.index == 0:
##            raise StopIteration
##        self.index = self.index - 1
##        return self.data[self.index]

    
def reverse(data):
    for index in range(len(data)-1, -1, -1):
        yield data[index]

